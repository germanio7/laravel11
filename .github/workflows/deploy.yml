name: Deploy Laravel App

on:
  push:
    branches:
      - main  # Este es el branch de producción

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout del código
    - name: Checkout code
      uses: actions/checkout@v3

    # Configurar Docker
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2

    # Iniciar sesión en Docker Hub (o tu registro de contenedores)
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # Construir y subir la imagen Docker
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v3
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     push: true
    #     tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest

    # Configurar SSH para acceder al VPS
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Copiar docker-compose.yml al VPS
    # - name: Copy docker-compose.yml to VPS
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ secrets.VPS_IP }}
    #     username: ${{ secrets.VPS_USER }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     source: ./docker-compose.yml
    #     target: /var/app/docker-compose.yml

    # Cargar variables de entorno desde el secret ENV
    - name: Create .env file from secret
      run: echo "${{ secrets.ENV }}" > .env

    # Desplegar en el VPS usando SSH
    - name: Deploy to VPS
      run: |
        scp -o StrictHostKeyChecking=no .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }}:/var/app/.env
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} << 'EOF'
          # cd /var/app
          # docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          # docker compose up -d --build
          cd /var/app/ 
          docker compose down
          git fetch && git reset --hard "origin/main"
          docker-compose up -d --build
          echo "codebase update is done";
        EOF
